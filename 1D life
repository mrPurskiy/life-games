#include <iostream>
#include <bitset>
using namespace std;
//cool rules 60
int n = 200;
int printtt = 1000;
string forstart = "10101010";
string *pstr =&forstart;


void input(bool* arr, int n);
void print(bool* arr, int n);
void rules(bool* arr, int n, string str =*pstr);
void game(bool* arr, int n);



int main()
{
    for (int i = 90; i < 91; i++)
    {
        cout << "THE RULE IS ----- " << i;
        int rule = i;

        string rulesn = bitset<8>(rule).to_string();            // Rule â„– rule
        *pstr = rulesn;
        bool* main_arr = new bool[n] {0};

        print(main_arr, n);
        input(main_arr, n);
        rules(main_arr, n);
        game(main_arr, n);
        cout << "the end";
        cout << "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n";

    }
  
   
    return 0;
}

void input(bool* arr, int n)
{


    cout << "\nto stop enter 0";
    do
    {
        cout << "\n create life in : \n";
        int temp = n/2;
        //cin >> temp;
        if (arr[temp - 1] == 1)
        {
            cout << "\nit's already life\n";
        }
        arr[temp - 1] = 1;
        if (temp == 0)
        {
            break;
        }
        print(arr, n);

    } while (0);



}
void print(bool* arr, int n)
{

    for (int i = 0; i < n; i++)
    {
        if (arr[i] == 1)
        {
            cout << "O";
        }
        else
        {
            cout << " ";
        }
    }
    cout << endl;
}
void rules(bool* arr, int n, string str)
{
    for (int i = 1; i < n - 1; i++)
    {

        //rule N - 1   111
        if (arr[i - 1] == 1 && arr[i] == 1 && arr[i + 1] == 1)
        {
            arr[i] = str[0] - '0';
        }


        //rule N - 2     110
        else if (arr[i - 1] == 1 && arr[i] == 1 && arr[i + 1] == 0)
        {
            arr[i] = str[1] - '0';
        }

        //rule N - 3     101
        else if (arr[i - 1] == 1 && arr[i] == 0 && arr[i + 1] == 1)
        {
            arr[i] = str[2] - '0';
        }

        //rule N - 4     100
        else  if (arr[i - 1] == 1 && arr[i] == 0 && arr[i + 1] == 0)
        {
            arr[i] = str[3] - '0';
        }

        //rule N - 5      011
        else  if (arr[i - 1] == 0 && arr[i] == 1 && arr[i + 1] == 1)
        {
            arr[i] = str[4] - '0';
        }

        //rule N - 6        010
        else  if (arr[i - 1] == 0 && arr[i] == 1 && arr[i + 1] == 0)
        {
            arr[i] = str[5] - '0';
        }

        //rule N - 7      001
        else  if (arr[i - 1] == 0 && arr[i] == 0 && arr[i + 1] == 1)
        {
            arr[i] = (str[6] - '0');
        }

        //rule N - 8       000
        else if ((arr[i - 1] == 0) && (arr[i] == 0) && (arr[i + 1] == 0))
        {
            arr[i] = (str[7] - '0');
        }



    }
}

void game(bool* arr, int n)
{
    for (int i = 0; i < printtt; i++)
    {
        print(arr, n);
        rules(arr, n);
    }
    cout << "continue??? enter num" << endl;
  /*  int t = 0;
    cin >> t;
    if (t)
    {
        game(arr, n);
    }*/
}


